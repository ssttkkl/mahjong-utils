# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Publish KMP with Gradle

on:
  release:
    types: [published]

jobs:
  publish:
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]

    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      packages: write

    env:
      OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
      OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
      SIGNING_KEY_ID: ${{ secrets.SIGNING_KEYID }}
      SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
      SIGNING_SECRET_KEY_RING_FILE: secret_ring.gpg

    steps:
    - uses: actions/checkout@v3

    - name: Setup Java JDK
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17
        cache: 'gradle'

    - name: Cache Kotlin/Native compiler
      id: cache-konan
      uses: actions/cache@v3
      with:
        path: ~/.konan
        key: ${{ runner.os }}-konan
        
    - uses: actions/setup-node@v4
      name: Set up Node.js
      with:
        node-version: '21-v8-canary'
        registry-url: 'https://registry.npmjs.org'
          
    - name: Decode secret_ring.gpg
      env:
        SIGNING_SECRET_KEY_RING_BASE64: ${{ secrets.SIGNING_SECRET_KEY_RING_BASE64 }}
      run: |
        echo $SIGNING_SECRET_KEY_RING_BASE64 | base64 --decode > $SIGNING_SECRET_KEY_RING_FILE

    - name: Publish mahjong-utils
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        ./gradlew :mahjong-utils:publishAllPublicationsToSonatypeRepository

    - name: Publish mahjong-utils (linuxX64 only)
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        ./gradlew :mahjong-utils:publishLinuxX64PublicationToSonatypeRepository

    - name: Publish mahjong-utils (mingwX64 only)
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        ./gradlew :mahjong-utils:publishMingwX64PublicationToSonatypeRepository
        
    - name: Publish mahjong-utils-entry for JS/WASM
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        ./gradlew :mahjong-utils-entry:publishJsPackageToNpmjsRegistry
        ./gradlew :mahjong-utils-entry:publishWasmJsPackageToNpmjsRegistry
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
